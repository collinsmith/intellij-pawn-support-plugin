amxx.err.001=expected token: \"{0}\", but found \"{1}\"
amxx.err.002=only a single statement (or expression) can follow each \"case\"
amxx.err.003=declaration of a local variable must appear in a compound block
amxx.err.004=function \"{0}\" is not implemented
amxx.err.005=function may not have arguments
amxx.err.006=must be assigned to an array
amxx.err.007=operator cannot be redefined
amxx.err.008=must be a constant expression; assumed zero
amxx.err.009=invalid array size (negative or zero)
amxx.err.010=invalid function or declaration
amxx.err.011=invalid outside functions
amxx.err.012=invalid function call, not a valid address
amxx.err.013=no entry point (no public functions)
amxx.err.014=invalid statement; not in switch
amxx.err.015=\"default\" case must be the last case in switch statement
amxx.err.016=multiple defaults in \"switch\"
amxx.err.017=undefined symbol \"{0}\"
amxx.err.018=initialization data exceeds declared size
amxx.err.019=not a label: \"{0}\"
amxx.err.020=invalid symbol name \"{0}\"
amxx.err.021=symbol already defined: \"{0}\"
amxx.err.022=must be lvalue (non-constant)
amxx.err.023=array assignment must be simple assignment
amxx.err.024=\"break\" or \"continue\" is out of context
amxx.err.025=function heading differs from prototype
amxx.err.026=no matching \"#if...\"
amxx.err.027=invalid character constant
amxx.err.028=invalid subscript (not an array or too many subscripts): \"{0}\"
amxx.err.029=invalid expression, assumed zero
amxx.err.030=compound statement not closed at the end of file
amxx.err.031=unknown directive
amxx.err.032=array index out of bounds (variable \"{0}\")
amxx.err.033=array must be indexed (variable \"{0}\")
amxx.err.034=argument does not have a default value (argument %d)
amxx.err.035=argument type mismatch (argument %d)
amxx.err.036=empty statement
amxx.err.037=invalid string (possibly non-terminated string)
amxx.err.038=extra characters on line
amxx.err.039=constant symbol has no size
amxx.err.040=duplicate \"case\" label (value %d)
amxx.err.041=invalid ellipsis, array size is not known
amxx.err.042=invalid combination of class specifiers
amxx.err.043=character constant exceeds range for packed string
amxx.err.044=positional parameters must precede all named parameters
amxx.err.045=too many function arguments
amxx.err.046=unknown array size (variable \"{0}\")
amxx.err.047=array sizes do not match, or destination array is too small
amxx.err.048=array dimensions do not match
amxx.err.049=invalid line continuation
amxx.err.050=invalid range
amxx.err.051=invalid subscript, use \"[ ]\" operators on major dimensions
amxx.err.052=multi-dimensional arrays must be fully initialized
amxx.err.053=exceeding maximum number of dimensions
amxx.err.054=unmatched closing brace
amxx.err.055=start of function body without function header
amxx.err.056=arrays, local variables and function arguments cannot be public (variable \"{0}\")
amxx.err.057=unfinished expression before compiler directive
amxx.err.058=duplicate argument; same argument is passed twice
amxx.err.059=function argument may not have a default value (variable \"{0}\")
amxx.err.060=multiple \"#else\" directives between \"#if ... #endif\"
amxx.err.061=\"#elseif\" directive follows an \"#else\" directive
amxx.err.062=number of operands does not fit the operator
amxx.err.063=function result tag of operator \"{0}\" must be \"{1}\"
amxx.err.064=cannot change predefined operators
amxx.err.065=function argument may only have a single tag (argument %d)
amxx.err.066=function argument may not be a reference argument or an array (argument \"{0}\")
amxx.err.067=variable cannot be both a reference and an array (variable \"{0}\")
amxx.err.068=invalid rational number precision in #pragma
amxx.err.069=rational number format already defined
amxx.err.070=rational number support was not enabled
amxx.err.071=user-defined operator must be declared before use (function \"{0}\")
amxx.err.072=\"sizeof\" operator is invalid on \"function\" symbols
amxx.err.073=function argument must be an array (argument \"{0}\")
amxx.err.074=#define pattern must start with an alphabetic character
amxx.err.075=input line too long (after substitutions)
amxx.err.076=syntax error in the expression, or invalid function call
amxx.err.077=malformed UTF-8 encoding, or corrupted file: {0}
amxx.err.078=function uses both \"return\" and \"return <value>\"
amxx.err.079=inconsistent return types (array & non-array)
amxx.err.080=unknown symbol, or not a constant symbol (symbol \"{0}\")
amxx.err.081=cannot take a tag as a default value for an indexed array parameter (symbol \"{0}\")
amxx.err.082=user-defined operators and native functions may not have states
amxx.err.083=a function may only belong to a single automaton (symbol \"{0}\")
amxx.err.084=state conflict: one of the states is already assigned to another implementation (symbol \"{0}\")
amxx.err.085=no states are defined for function \"{0}\"
amxx.err.086=unknown automaton \"{0}\"
amxx.err.087=unknown state \"{0}\" for automaton \"{0}\"
amxx.err.088=number of arguments does not match definition

amxx.err.100=cannot read from file: \"{0}\"
amxx.err.101=cannot write to file: \"{0}\"
amxx.err.102=table overflow: \"{0}\"
amxx.err.103=insufficient memory
amxx.err.104=invalid assembler instruction \"{0}\"
amxx.err.105=numeric overflow, exceeding capacity
amxx.err.106=compiled script exceeds the maximum memory size (%ld bytes)
amxx.err.107=too many error messages on one line
amxx.err.108=codepage mapping file not found
amxx.err.109=invalid path: \"{0}\"
amxx.err.110=assertion failed: {0}
amxx.err.111=user error: {0}
amxx.err.112=specify either all dimensions or only the last dimension

amxx.err.200=symbol \"{0}\" is truncated to %d characters
amxx.err.201=redefinition of constant/macro (symbol \"{0}\")
amxx.err.202=number of arguments does not match definition
amxx.err.203=symbol is never used: \"{0}\"
amxx.err.204=symbol is assigned a value that is never used: \"{0}\"
amxx.err.205=redundant code: constant expression is zero
amxx.err.206=redundant test: constant expression is non-zero
amxx.err.207=unknown #pragma
amxx.err.208=function with tag result used before definition, forcing reparse
amxx.err.209=function \"{0}\" should return a value
amxx.err.210=possible use of symbol before initialization: \"{0}\"
amxx.err.211=possibly unintended assignment
amxx.err.212=possibly unintended bitwise operation
amxx.err.213=tag mismatch
amxx.err.214=possibly a \"const\" array argument was intended: \"{0}\"
amxx.err.215=expression has no effect
amxx.err.216=nested comment
amxx.err.217=loose indentation
amxx.err.218=old style prototypes used with optional semicolons
amxx.err.219=local variable \"{0}\" shadows a variable at a preceding level
amxx.err.220=expression with tag override must appear between parentheses
amxx.err.221=label name \"{0}\" shadows tag name
amxx.err.222=number of digits exceeds rational number precision
amxx.err.223=redundant \"sizeof\": argument size is always 1 (symbol \"{0}\")
amxx.err.224=indeterminate array size in \"sizeof\" expression (symbol \"{0}\")
amxx.err.225=unreachable code
amxx.err.226=a variable is assigned to itself (symbol \"{0}\")
amxx.err.227=more initializers than enum fields
amxx.err.228=length of initializers exceeds size of the enum field
amxx.err.229=index tag mismatch (symbol \"{0}\")
amxx.err.230=no implementation for state \"{0}\" / function \"{1}\", no fall-back
amxx.err.231=state specification on forward declaration is ignored
amxx.err.232=output file is written, but with compact encoding disabled
amxx.err.233=symbol \"{0}\" is marked as deprecated: {0}
amxx.err.234=recursive function \"{0}\"

amxx.err.001.include=expected {0} or {1}, but found \"{2}\"
amxx.err.020.expected=invalid symbol name \"{0}\", expected an identifier
amxx.err.042.conflict=invalid combination of class specifiers: \"{0}\" and \"{1}\"
amxx.err.042.duplicate=invalid combination of class specifiers: \"{0}\" appears twice
amxx.err.042.cannotbe=invalid combination of class specifiers: cannot be \"{0}\"